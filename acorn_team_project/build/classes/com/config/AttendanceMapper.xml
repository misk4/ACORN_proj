<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.acorn.AttendanceMapper">
 
 
 <select id="getattenlist" parameterType="String" resultType="AttendanceDTO">
 select student_id,course_id,tag_time,to_char(course_date,'YY/MM/DD') as course_date from attendance where student_id = #{student_id} order by course_date desc,tag_time desc 
 </select>
 
 <select id="attendancecheck" parameterType="hashmap" resultType="AttendanceDTO">
 select * from attendance where student_id = #{userid} and course_date = to_date(#{course_date},'YY/MM/DD')
 </select>
 
 <select id="getattendanceday" parameterType="hashmap" resultType="int">
 select count(count(course_date)) from attendance where substr(course_date,3,4) like '%'||#{mm}||'%' 
and student_id = #{student_id}
group by course_date 
having (to_date(max(tag_time),'HH24:MI:SS')-to_date(min(tag_time),'HH24:MI:SS'))*24>=6
 </select>
 <!-- 나의 출석 날짜 리스트 구하기  -->
 <select id="getattendancedate" parameterType="hashmap" resultType="AttendanceDTO">
 select course_date from attendance where substr(course_date,3,4) like '%'||#{mm}||'%' 
and student_id = #{student_id}
group by course_date 
having (to_date(max(tag_time),'HH24:MI:SS')-to_date(min(tag_time),'HH24:MI:SS'))*24>=6
 
 </select>
 
 <select id="studentattendancelist" parameterType="String" resultType="StudentattendancelistDTO">
 select student.name, ATTENDANCE.student_id,ATTENDANCE.course_id,ATTENDANCE.tag_time,ATTENDANCE.course_date from STUDENT join ATTENDANCE on student.id=ATTENDANCE.STUDENT_ID
 where course_date = #{today}
 </select>
 
 <select id="getabsencelist" parameterType="String" resultType="StudentDTO">
 select * from student where id not in(select student_id from ATTENDANCE where course_date=#{today}) 
 
 </select>
 
 
 <insert id="insertattendance" parameterType="hashmap">
 insert into attendance(id,student_id,course_id,tag_time,course_date) values(ATTENDANCE_SEQ.nextval,#{userid},(select COURSE_ID 
 from register where student_id=#{userid}),#{tag_time},to_date(#{course_date},'YY/MM/DD'))
 
 </insert>
   
</mapper>